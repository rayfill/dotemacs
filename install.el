(unless (file-exists-p (expand-file-name "~/.emacs.d/elpa"))
  (format "%s" (expand-file-name "~/.emacs.d/elpa"))
  (package-refresh-contents nil))

(package-install 'package-utils)
(package-install 'async)

(package-install 'exec-path-from-shell)
(package-install 'use-package)
(package-install 'go-mode)
(package-install 'company)
(package-install 'lsp-mode)
(package-install 'lsp-ui)
(package-install 'treemacs)
(package-install 'lsp-treemacs)
(package-install 'multi-web-mode)
(package-install 'typescript-mode)
(package-install 'which-key)
(package-install 'sql-indent)
(package-install 'org)
(package-install 'orgtbl-aggregate)
(package-install 'yaml-mode)
(package-install 'flymake-yaml)
(package-install 'highlight-indentation)
(package-install 'nvm)
(package-install 'js2-mode)
(package-install 'nodejs-repl)
(package-install 'elscreen)
(package-install 'elscreen-separate-buffer-list)
(package-install 'magit)
(package-install 'magit-find-file)
(package-install 'vue-mode)
(package-install 'vue-html-mode)
(package-install 'slime)
(package-install 'tree-sitter)
(package-install 'tree-sitter-indent)
(package-install 'tree-sitter-langs)
(package-install 'csharp-mode)
(package-install 'markdown-preview-mode)
(package-install 'terraform-mode)
(package-install 'terraform-doc)
(package-install 'smartparens)
(package-install 'lsp-java)
(package-install 'e2wm)
(package-install 'ts-comint)
(package-install 'dap-mode)
(package-install 'yasnippet)

(cl-eval-when (compile load execute)
  (require 'async))
(async-start
 `(lambda ()
    (setq load-path ',load-path)
    (require 'package-utils)
    (package-refresh-contents)
    (package-utils-upgrade-all t))
 (lambda (result)
   (message "package upgrade processing done.")))
